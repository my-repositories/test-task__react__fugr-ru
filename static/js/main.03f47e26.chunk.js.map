{"version":3,"sources":["components/Loader/Loader.js","components/Page/AboutMe.js","components/Page/AboutApp.js","components/Page/ProjectList.js","components/Page/WorkExperience.js","components/Page/KeyWords.js","components/Page/ProfileInfo.js","components/Page/ProfilePrintable.js","components/Page/ProfileNonPrintable.js","components/Page/Profile.js","components/Page/Page.js","store/Aside/actionTypes.js","store/Aside/actions.js","components/Aside/LangPanel.js","components/Aside/ThemePanel.js","components/Aside/DownloadPanel.js","components/Aside/Aside.js","components/App/App.js","store/Page/actions.js","store/Page/actionTypes.js","serviceWorker.js","store/Aside/aSideReducer.js","store/Page/pageReducer.js","store/rootReducer.js","store/Aside/saga/theme.js","store/Page/saga/profile.js","index.js"],"names":["Loader","src","className","alt","connect","state","page","data","aboutMe","title","facts","aria-label","map","fact","index","key","aboutApp","description","href","projectList","items","item","Fragment","groupName","projects","project","name","link","workExperience","list","responsibilities","techStack","specialization","duration","stack","length","line","keywords","buzzWords","status","profile","props","birthDate","age","useMemo","birthday","Date","now","getYear","getMonth","getDate","calculateAgeByBirthday","value","city","socialMedia","social","url","level","english","salary","employment","location","ProfilePrintable","ProfileNonPrintable","Page","changeLang","lang","type","changeTheme","theme","locale","aside","aSide","dispatch","setEnglish","setRussian","role","tabIndex","onClick","setDarkTheme","setLightTheme","data-scheme","dark","light","downloadCv","download","Aside","mapDispatchToProps","loadProfile","isLoading","hasError","useEffect","Boolean","window","hostname","match","initialState","combineReducers","action","aSideThemeSagaWorker","aSideThemeSagaWatcher","document","getElementById","classList","call","takeEvery","pageLoadProfileSagaWorker","pageLoadProfileSagaWatcher","fetch","then","response","json","delay","put","console","warn","sagaMiddleware","createSagaMiddleware","composeSetup","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03f47e26.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport default function Loader() {\n  return (\n    <img src=\"/assets/images/loader.svg\" className=\"Loader\" alt=\"logo\" />\n  );\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction AboutMe({title, facts}) {\n  return (\n    <section className=\"Section\" aria-label={title}>\n      <h2 className=\"H H_level_2\">{title}</h2>\n      {facts.map((fact, index) => (\n        <p key={index}>- {fact}</p>\n      ))}\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.aboutMe;\n\nexport default connect(mapStateToProps, null)(AboutMe);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction AboutApp({title, description}) {\n  return (\n    <section className=\"Section\" aria-label={title}>\n      <h2 className=\"H H_level_2\">{title}</h2>\n      <p>\n        {description} <a href=\"https://github.com/miyaokamarina/cv\">https://github.com/miyaokamarina/cv</a>\n      </p>\n      <p>Built with&nbsp;React, Redux, HSLuv color space, Twemoji.</p>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.aboutApp;\n\nexport default connect(mapStateToProps, null)(AboutApp);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction ProjectList({title, items}) {\n  return (\n    <section className=\"Section\" aria-label={title}>\n      <h2 className=\"H H_level_2\">{title}</h2>\n      <section className=\"Section\">\n        {items.map(item => (\n          <React.Fragment key={item.groupName}>\n            <h3 className=\"H H_level_3\">{item.groupName}</h3>\n            <ul className=\"Ul\">\n              {item.projects.map(project => (\n                <li className=\"Ul__Item\" key={project.name}>\n                  <a href={project.link}>{project.name}</a>: {project.description}\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        ))}\n      </section>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.projectList;\n\nexport default connect(mapStateToProps, null)(ProjectList);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction WorkExperience({title, list, responsibilities, techStack}) {\n  return (\n    <section className=\"Section\" aria-label={title}>\n      <h2 className=\"H H_level_2\">{title}</h2>\n      {list.map(item => (\n        <section className=\"Section\" aria-label={item.specialization} key={item.name}>\n          <h3 className=\"H H_level_3\">\n            {item.specialization}\n            <div className=\"Subtitle\">\n              <a href={item.link}>{item.name}</a>, {item.duration}</div>\n          </h3>\n          <p><strong className=\"Xps__Strong\">{responsibilities}:</strong></p>\n          <p>{item.description}</p>\n          {item.stack && item.stack.length && (\n            <>\n              <br />\n              <p>{techStack}:</p>\n              {item.stack.map((line, index) => (\n                <p key={index}>- {line}</p>\n              ))}\n            </>\n          )}\n        </section>\n      ))}\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.workExperience;\n\nexport default connect(mapStateToProps, null)(WorkExperience);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction KeyWords({title, buzzWords}) {\n  return (\n    <section className=\"Section\" aria-label={title}>\n      <h2 className=\"H H_level_2\">{title}</h2>\n      <ul className=\"Chips Buzzwords\">\n        {buzzWords.map(item => (\n          <li className={`static Chips__Item ${item.status}`} key={item.name}>{item.name}</li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.keywords;\n\nexport default connect(mapStateToProps, null)(KeyWords);\n","import React, {useMemo} from 'react';\nimport {connect} from 'react-redux';\n\nfunction calculateAgeByBirthday(birthDate) {\n  const birthday = new Date(birthDate);\n  const now = new Date();\n  const age = now.getYear() - birthday.getYear();\n  const hasBirthdayInCurrentYear = now.getMonth() > birthday.getMonth()\n  || (now.getMonth() === birthday.getMonth() && now.getDate() >= birthday.getDate());\n\n  return hasBirthdayInCurrentYear\n    ? age\n    : age - 1;\n}\n\nfunction ProfileInfo(props) {\n  const birthDate = props.age.birthDate;\n  const age = useMemo(() => calculateAgeByBirthday(birthDate), [birthDate]);\n\n  return (\n    <>\n      <div className=\"Split__Item\">\n        <dl className=\"Properties\">\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.name.key}:</dt>\n            <dd className=\"Properties__V\">{props.name.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.age.key}:</dt>\n            <dd className=\"Properties__V\">{age}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.city.key}:</dt>\n            <dd className=\"Properties__V\">{props.city.value}</dd>\n          </div>\n          {props.socialMedia.map(social => (\n            <div className=\"Properties__Item\" key={social.key}>\n              <dt className=\"Properties__K\">{social.key}:</dt>\n              <dd className=\"Properties__V\">\n                <a href={social.url}>{social.value}</a></dd>\n            </div>\n          ))}\n        </dl>\n      </div>\n      <div className=\"Split__Item\">\n        <dl className=\"Properties\">\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.level.key}:</dt>\n            <dd className=\"Properties__V\">{props.level.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.english.key}:</dt>\n            <dd className=\"Properties__V\">{props.english.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.specialization.key}:</dt>\n            <dd className=\"Properties__V\">{props.specialization.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.salary.key}:</dt>\n            <dd className=\"Properties__V\">{props.salary.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.employment.key}:</dt>\n            <dd className=\"Properties__V\">{props.employment.value}</dd>\n          </div>\n          <div className=\"Properties__Item\">\n            <dt className=\"Properties__K\">{props.location.key}:</dt>\n            <dd className=\"Properties__V\">{props.location.value}</dd>\n          </div>\n        </dl>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.profile;\n\nexport default connect(mapStateToProps, null)(ProfileInfo);\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo';\n\nexport default function ProfilePrintable() {\n  return (\n    <div className=\"Split\">\n      <div className=\"Split__Item\">\n        <div className=\"Avatar\"/>\n      </div>\n      <ProfileInfo />\n    </div>\n  );\n}\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo';\n\nexport default function ProfileNonPrintable() {\n  return (\n    <>\n      <div className=\"Center\">\n        <div className=\"Center__Inner\">\n          <div className=\"Avatar\"/>\n        </div>\n      </div>\n      <div className=\"Center\">\n        <div className=\"Center__Inner\">\n          <div className=\"Split\">\n            <ProfileInfo />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport ProfilePrintable from './ProfilePrintable';\nimport ProfileNonPrintable from './ProfileNonPrintable';\n\nfunction Profile(props) {\n  return (\n    <section className=\"Section HeadingSection\" aria-label={`${props.name.value} CV (${props.specialization.value} Developer)`}>\n      <h1 className=\"H H_level_1\">{props.name.value} CV ({props.specialization.value} Developer)</h1>\n      <div className=\"print\">\n        <ProfilePrintable/>\n      </div>\n      <div className=\"no-print lte-s\">\n        <ProfileNonPrintable/>\n      </div>\n      <div className=\"no-print gte-m\">\n        <ProfileNonPrintable/>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => state.page.data.profile;\n\nexport default connect(mapStateToProps, null)(Profile);\n","import React from 'react';\nimport AboutMe from './AboutMe';\nimport AboutApp from './AboutApp';\nimport ProjectList from './ProjectList';\nimport WorkExperience from './WorkExperience';\nimport KeyWords from './KeyWords';\nimport Profile from './Profile';\n\nexport default function Page() {\n  return (\n    <div className=\"Page\">\n      <article className=\"Page__Article\">\n        <Profile/>\n        <div className=\"no-print\">\n          <KeyWords/>\n          <WorkExperience/>\n          <ProjectList/>\n          <AboutMe/>\n          <AboutApp/>\n        </div>\n        <div className=\"print\">\n          <AboutMe/>\n          <ProjectList/>\n          <WorkExperience/>\n        </div>\n      </article>\n    </div>\n  );\n}\n","export const ASIDE_CHANGE_LANG = 'ASIDE_CHANGE_LANG';\nexport const ASIDE_CHANGE_THEME = 'ASIDE_CHANGE_THEME';\n","import {ASIDE_CHANGE_LANG, ASIDE_CHANGE_THEME} from './actionTypes';\n\nexport const changeLang = (lang) => ({\n  type: ASIDE_CHANGE_LANG,\n  lang\n});\n\nexport const changeTheme = (theme) => ({\n  type: ASIDE_CHANGE_THEME,\n  theme\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {changeLang} from '../../store/Aside/actions';\n\nfunction LangPanel({lang, locale, setRussian, setEnglish}) {\n  return (\n    <section className=\"Section language\" aria-label={locale.lang}>\n      <h2 className=\"H H_level_2\">{locale.lang}</h2>\n      <div className=\"Buttons primary\">\n        <span\n          role=\"button\"\n          tabIndex=\"0\"\n          onClick={setRussian}\n          className={`Buttons__Item LangSwitcher__Item_lang_ru ${lang === 'ru' ? 'checked' : ''}`}\n        >\n          Русский\n        </span>\n        <span\n          role=\"button\"\n          tabIndex=\"0\"\n          onClick={setEnglish}\n          className={`Buttons__Item LangSwitcher__Item_lang_en ${lang === 'en' ? 'checked' : ''}`}\n        >\n          English\n        </span>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => ({\n  locale: state.page.data.aside,\n  lang: state.aSide.lang\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setEnglish: () => dispatch(changeLang('en')),\n  setRussian: () => dispatch(changeLang('ru'))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LangPanel);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {changeTheme} from '../../store/Aside/actions';\n\nfunction ThemePanel({locale, theme, setDarkTheme, setLightTheme}) {\n  return (\n    <section className=\"Section scheme\" aria-label={locale.theme.title}>\n      <h2 className=\"H H_level_2\">{locale.theme.title}</h2>\n      <div className=\"Buttons primary\">\n        <span\n          role=\"button\"\n          tabIndex=\"0\"\n          data-scheme=\"dark\"\n          className={`Buttons__Item ${theme === 'dark' ? 'checked' : ''}`}\n          onClick={setDarkTheme}\n        >\n          {locale.theme.dark}\n        </span>\n\n        <span\n          role=\"button\"\n          tabIndex=\"0\"\n          data-scheme=\"light\"\n          className={`Buttons__Item ${theme === 'light' ? 'checked' : ''}`}\n          onClick={setLightTheme}\n        >\n          {locale.theme.light}\n        </span>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => ({\n  locale: state.page.data.aside,\n  theme: state.aSide.theme\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDarkTheme: () => dispatch(changeTheme('dark')),\n  setLightTheme: () => dispatch(changeTheme('light'))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemePanel);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction DownloadPanel({locale}) {\n  return (\n    <section className=\"Section\" aria-label={locale.downloadCv}>\n      <div className=\"Center Download\">\n        <div className=\"Center__Inner\">\n          <a\n            tabIndex=\"0\"\n            role=\"button\"\n            className=\"Button secondary\"\n            href=\"/assets/cv.aleksandr_loktionov.net-developer.pdf\"\n            download=\"cv.aleksandr_loktionov.net-developer.pdf\"\n          >\n            {locale.downloadCv}\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => ({\n  locale: state.page.data.aside\n});\n\nexport default connect(mapStateToProps)(DownloadPanel);\n","import React from 'react';\nimport LangPanel from './LangPanel';\nimport ThemePanel from './ThemePanel';\nimport DownloadPanel from './DownloadPanel';\n\nexport default function Aside() {\n  return (\n    <aside className=\"Aside no-print gte-l1\">\n      <LangPanel/>\n      <ThemePanel/>\n      <DownloadPanel/>\n    </aside>\n  );\n}\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport Loader from '../Loader/Loader';\nimport Page from '../Page/Page';\nimport Aside from '../Aside/Aside';\nimport {loadProfile} from '../../store/Page/actions';\n\nfunction App(props) {\n  const {loadProfile, lang} = props;\n\n  useEffect(() => {\n    loadProfile(lang);\n  }, [loadProfile, lang]);\n\n  if (props.isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n        <Loader/>\n        <p className=\"loader-text\">Загрузка ...</p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Page/>\n      <Aside/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.page.isLoading,\n  hasError: state.page.hasError,\n  lang: state.aSide.lang\n});\nconst mapDispatchToProps = {\n  loadProfile\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {PAGE_LOAD_PROFILE} from './actionTypes';\n\nexport const loadProfile = (lang) => ({\n  type: PAGE_LOAD_PROFILE,\n  lang\n});\n","export const PAGE_LOAD_PROFILE = 'PAGE_LOAD_PROFILE';\nexport const PAGE_LOADED_SUCCESS = 'PAGE_LOADED_SUCCESS';\nexport const PAGE_LOADED_ERROR = 'PAGE_LOADED_ERROR';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ASIDE_CHANGE_LANG, ASIDE_CHANGE_THEME} from './actionTypes';\n\nconst initialState = {\n  theme: 'dark',\n  lang: 'ru'\n};\n\nexport default function aSideReducer(state = initialState, action) {\n  switch (action.type) {\n    case ASIDE_CHANGE_LANG:\n      return {\n        ...state,\n        lang: action.lang\n      };\n\n    case ASIDE_CHANGE_THEME:\n      return {\n        ...state,\n        theme: action.theme\n      };\n\n    default:\n      return state\n  }\n}\n","import {PAGE_LOAD_PROFILE, PAGE_LOADED_SUCCESS, PAGE_LOADED_ERROR} from './actionTypes';\n\nconst initialState = {\n  isLoading: true,\n  hasError: false,\n  data: {}\n};\n\nexport default function pageReducer(state = initialState, action) {\n  switch (action.type) {\n    case PAGE_LOAD_PROFILE:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false\n      };\n\n    case PAGE_LOADED_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.data\n      };\n\n    case PAGE_LOADED_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true\n      };\n\n    default: return state\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport aSideReducer from './Aside/aSideReducer';\nimport pageReducer from './Page/pageReducer';\n\nexport default combineReducers({\n  aSide: aSideReducer,\n  page: pageReducer\n});\n","import {call, takeEvery} from '@redux-saga/core/effects';\n\nfunction changeTheme(theme) {\n  document.getElementById('mainhtml').classList.value = `${theme} keyboard`;\n}\n\nfunction* aSideThemeSagaWorker(action) {\n  yield call(changeTheme, action.theme);\n}\n\nexport default function* aSideThemeSagaWatcher() {\n  yield takeEvery('ASIDE_CHANGE_THEME', aSideThemeSagaWorker)\n}\n","import {call, delay, put, takeEvery} from '@redux-saga/core/effects';\n\nfunction loadProfile(lang) {\n  return fetch(`/assets/data/${lang}.json`)\n    .then(response => response.json());\n}\n\nfunction* pageLoadProfileSagaWorker(action) {\n  try {\n    const data = yield call(loadProfile, action.lang);\n    yield delay(2000);\n    yield put({type: \"PAGE_LOADED_SUCCESS\", data});\n  } catch (e) {\n    console.warn(e);\n    yield put({type: \"PAGE_LOADED_ERROR\"});\n  }\n}\n\nexport default function* pageLoadProfileSagaWatcher() {\n  yield takeEvery('PAGE_LOAD_PROFILE', pageLoadProfileSagaWorker)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/rootReducer';\nimport aSideThemeSagaWatcher from './store/Aside/saga/theme';\nimport pageLoadProfileSagaWatcher from './store/Page/saga/profile';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst isDev = process.env.NODE_ENV !== 'production' && typeof window === 'object'\nconst composeSetup = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  : compose\nconst store = createStore(\n  rootReducer,\n  composeSetup(\n    applyMiddleware(sagaMiddleware)\n  )\n);\nsagaMiddleware.run(aSideThemeSagaWatcher);\nsagaMiddleware.run(pageLoadProfileSagaWatcher);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}